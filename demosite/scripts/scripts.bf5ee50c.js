"use strict";var j=0;angular.module("foundation-range-slider-angular",[]).directive("rangeSlider",["$timeout","$compile",function(a,b){return{restrict:"E",require:"?ngModel",templateUrl:"modules/foundation-range-slider-angular/range-slider.html",scope:{min:"=",max:"=",step:"=",precision:"="},compile:function(b,c,d){j++;return{pre:function(a,b,c,d){},post:function(b,c,d,e){b.vertical="vertical"in d;var f=angular.element(c.children()[0]);a(function(){var a="";a+="vertical: "+b.vertical+"; ",a+="start: "+(b.min||0)+"; ",a+="end: "+(b.max||100)+"; ",a+="precision: "+(b.precision||2)+"; ",a+="step: "+(b.step||1)+"; ",console.log(a),f.attr("data-options",a),$(document).foundation(),g()});var g=function(){if(e){e.$formatters.push(function(a){return void 0===a||null===a?a:""+a}),e.$parsers.push(function(a){return null===a?null:parseFloat(a)}),e.$render=function(){void 0!==e.$viewValue&&null!==e.$viewValue&&f.foundation("slider","set_value",e.$viewValue)},void 0===e.$viewValue&&e.$setViewValue(((b.max-b.min)/2+b.min).toFixed(b.precision||2)),e.$render();var a=null;if(f.on("change.fndtn.slider",function(b){var c=f.attr("data-slider");c!==a&&(a=c,e.$setViewValue(c))}),"undefined"!=typeof MutationObserver&&void 0===$(document).attr("frsa-observed")){var c=new MutationObserver(function(){b.$apply(function(){$(document).foundation("slider","reflow")})});c.observe(document,{attributes:!0,subtree:!0,attributeFilter:["class"]}),$(document).attr("frsa-observed","")}}}}}}}}]),angular.module("foundation-range-slider-angular.demo",["foundation-range-slider-angular","gist"]).config(["$sceDelegateProvider",function(a){a.resourceUrlWhitelist(["self","https://gist.githubusercontent.com/csaftoiu/**"])}]);var module=angular.module("foundation-range-slider-angular.demo").controller("ShowHideCtrl",["$scope",function(a){a.showHide=15,a.$watch("showHide",function(b){void 0!==b&&null!==b&&(a.showHideOpposite=100-b)}),a.$watch("showHideOpposite",function(b){void 0!==b&&null!==b&&(a.showHide=100-b)})}]).controller("MinMaxStepCtrl",["$scope",function(a){}]),j=0;angular.module("foundation-range-slider-angular.demo").directive("staticInclude",["$http","$templateCache","$compile",function(a,b,c){return{restrict:"A",link:function(d,e,f){var g=d.$eval(f.staticInclude);a.get(g,{cache:b}).success(function(a){var b=e.html(a).contents();c(b)(d)})}}}]).directive("includeGist",["$compile",function(a){return{restrict:"E",compile:function(){return{pre:function(b,c,d,e){var f=d.id,g=d.file||"example.html",h="https://gist.githubusercontent.com/csaftoiu/"+f+"/raw/"+g;h+="?bustCache="+(new Date).valueOf();var i,j="<div static-include=\"'"+h+'\'"></div><div class="row">  <div class="small-12 columns">    <gist id="'+f+'"></gist>  </div></div>',k=c.html(j).contents(),l=d.scope||"isolate";if("isolate"===l)i=b.$new(!0);else if("child"===l)i=b.$new(!1,b);else{if("embed"!==l)throw"Unknown scope type: "+l;i=b}a(k)(i)}}}}}]),angular.module("foundation-range-slider-angular").run(["$templateCache",function(a){a.put("modules/demo/demo.html",'<div class="row"> <div class="small-12 columns"> <hr> <a name="/demo"></a> <h2>Demos</h2> </div> </div> <div class="row"> <div class="small-12 columns"> <a name="/basic"></a> <h3 id="foo">Basic</h3> </div> </div> <div class="row"> <div class="small-6 columns"> <p class="text-center">Horizontal Slider</p> <include-gist id="2fef4a6d5d2a6ac78fea"></include-gist> </div> <div class="small-6 columns"> <p class="text-center">Vertical Slider</p> <include-gist id="f4e628cda3f14c573653"></include-gist> </div> </div> <div class="row"> <div class="small-12 columns"> <hr> <a name="/two-way"></a> <h3>Two-Way Binding</h3> <p>Two-way binding is provided via <code>ng-model</code>. The model value is a number. Multiple sliders and inputs can share the same model value. If the model has an initial value from a controller or an <code>ng-init</code>, it will be respected. </p> </div> </div> <include-gist id="1471c18fd10691af5449"></include-gist> <div class="row"> <div class="small-12 columns"> <hr> <a name="/min-max-step"></a> <h3>Min, Max, Step</h3> <p>Min, max, and step can all be provided as angular expressions. Due to limitations in Foundation, these are only applied once, when the slider is created. Precision can also be provided, which is the number of decimal places to use for the values.</p> <p>Model values are initialized to the middle of the range, if no initial values are provided.</p> </div> </div> <include-gist id="91cb55792fc4ff92d3bc"></include-gist> <!--<div ng-init="min = 10; max = 200; step = 0.5; value = 66">\n  <div class="row">\n    <div class="medium-4 columns">\n      <label>Min</label>\n      <div class="row">\n        <div class="small-6 columns">\n          <range-slider min="1" max="500" ng-model="min"></range-slider>\n        </div>\n        <div class="small-6 columns">\n          <input type="number" ng-model="min">\n        </div>\n      </div>\n    </div>\n    <div class="medium-4 columns">\n      <label>Max</label>\n      <div class="row">\n        <div class="small-6 columns">\n          <range-slider min="min + 50" max="650" ng-model="max"></range-slider>\n        </div>\n        <div class="small-6 columns">\n          <input type="number" ng-model="max">\n        </div>\n      </div>\n    </div>\n    <div class="medium-4 columns">\n      <label>Step</label>\n      <div class="row">\n        <div class="small-6 columns">\n          <range-slider min="0.001" max="5" step="0.001" precision="3" ng-model="step"></range-slider>\n        </div>\n        <div class="small-6 columns">\n          <input type="number" ng-model="step">\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class="row">\n    <div class="small-12 columns">\n      <label>Value</label>\n    </div>\n  </div>\n  <div class="row">\n    <div class="medium-8 small-6 columns">\n      <range-slider min="min" max="max" step="step" precision="3" ng-model="value"></range-slider>\n    </div>\n    <div class="medium-4 small-6 columns">\n      <input type="number" ng-model="value">\n    </div>\n  </div>\n</div>--> <div class="row"> <div class="small-12 columns"> <a name="/hidden"></a> <hr> <h3>Hidden Sliders</h3> <p>Foundation\'s sliders <a href="http://jsfiddle.net/gRtrX/356/">do not work</a> (<a href="https://github.com/zurb/foundation/issues/7011">#7011</a>) if sliders are changed while they are hidden. <code>range-slider</code> works around the issue using a <a href="https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver">MutationObserver</a>. Showing/hiding sliders with <code>ng-show</code>/<code>ng-hide</code> works out of the box. </p> </div> </div> <include-gist id="a2555d04907ce4b1825b"></include-gist>'),a.put("modules/demo/top-bar.html",'<script>function scrollToAnchor(name) {\n    // change location\n    window.location = \'#\' + name;\n\n    // scroll to element anyway\n    var element = $("a[name=\'" + name + "\']")[0];\n    if (!element) {\n      console.error("No such anchor with name", name);\n      return;\n    }\n    element.scrollIntoView();\n\n    // scroll back to leave room for sticky nav\n    var stickyNavHeight = $("nav.top-bar").height();\n    console.log(stickyNavHeight);\n    window.scrollTo(window.scrollX, window.scrollY - stickyNavHeight);\n  }\n\n  function scrollToTop() {\n    window.location = \'#\';\n    window.scrollTo(window.scrollX, 0);\n  }</script> <!-- top bar --> <div class="sticky"> <nav class="top-bar" data-topbar role="navigation"> <ul class="title-area"> <li class="name"> <h1><a onclick="scrollToTop()">foundation-range-slider-angular</a></h1> </li> <li class="toggle-topbar menu-icon"><a href="#"><span>Menu</span></a></li> </ul> <section class="top-bar-section"> <!-- Left Nav Section --> <ul class="left"> <li><a onclick="scrollToAnchor(\'/intro\')">Intro</a></li> <li><a onclick="scrollToAnchor(\'/basic\')">Basic</a></li> <li><a onclick="scrollToAnchor(\'/two-way\')">Two-way Binding</a></li> <li><a onclick="scrollToAnchor(\'/min-max-step\')">Min, Max, Step</a></li> <li><a onclick="scrollToAnchor(\'/hidden\')">Hidden Sliders</a></li> </ul> <ul class="right"> <li><a href="docs/">Documentation</a></li> </ul> </section> </nav> </div> <script>$(".sticky").foundation();</script>'),a.put("modules/foundation-range-slider-angular/range-slider.html",'<div class="range-slider" ng-class="{\'vertical-range\': vertical}" data-slider> <span class="range-slider-handle" role="slider" tabindex="0"></span> <span class="range-slider-active-segment"></span> <input type="hidden"> </div>')}]);